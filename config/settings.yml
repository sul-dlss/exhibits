superadmin_workgroups:
  - dlss:exhibits-admin
default_contact_email: exhibits-feedback@lists.stanford.edu
geonames_username: ""
stacks:
  iiif_url: "https://stacks.stanford.edu/image/iiif"
  file_url: "https://stacks.stanford.edu/file"

GOOGLE_SITE_VERIFICATION: "654321sitever"
# Google Analytics will report in debug mode by default.
# in shared_configs for exhibits-prod, we set this value to false.
analytics_debug: true

purl:
  url: "https://purl.stanford.edu/%{druid}"
  uat_url: "https://sul-purl-uat.stanford.edu/%{druid}"
  iiif_manifest_url: "https://purl.stanford.edu/%{druid}/iiif/manifest"
sidekiq:
  logger_level: "Logger::INFO" # The default from Sidekiq
feature_flags:
  themes: false
  bibliography_resource: false
  index_related_content: false # A feature that will index related SDR content. Initial implemented for Parker's IIIF AnnotationLists
  add_resource_type_index_field: false # Should the resource type field be added as an index/show field. For some exhibits this is desirable
  add_parker_search_fields: false # Parker specific search fields
  add_parker_index_fields: false # Parker specific index fields
  slack_notifications: false
  uat_embed: false
  search_across: false
traject:
  processing_thread_pool: 1
iiif_embed:
  url: https://embed.stanford.edu/iiif
iiif_dnd_base_url: https://library.stanford.edu/iiif?%{query}
action_mailer:
  default_options:
    from: "example-team@example.com"
  default_url_options:
    host: "example.com"
throttling:
  notify_honeybadger: false

nondiscoverable_exhibit_slugs:
  - exhibits-documentation

exhibit_themes:
  default:
    - default

purl_fetcher:
  url: "https://purl-fetcher-url.example.com"

full_text_highlight:
  fields:
    - full_text_tesimv
    - full_text_search_en
    - full_text_search_pt
    - full_text_search_id
  snippet_count: 5

slack_notifications:
  default_channel: "#spotlight-service-team"
  api_token: "your-api-token-here"
index_status_threshold: 10
sidekiq_retry_queue_threshold: 100
revision: <%= File.read("#{Rails.root}/REVISION").chomp if File.exist?("#{Rails.root}/REVISION") %>
